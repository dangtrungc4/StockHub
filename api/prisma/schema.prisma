generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELED
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String
  orders       Order[]
  activityLogs ActivityLog[]
  roles        Role[]

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  permissions Json
  users       User[]
}

model Product {
  id         Int         @id @default(autoincrement())
  sku        String      @unique
  name       String
  price      Decimal     @db.Decimal(10, 2)
  stock      Int         @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model Order {
  id        Int         @id @default(autoincrement())
  code      String      @unique
  userId    Int?
  user      User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  status    OrderStatus @default(PENDING)
  total     Decimal     @db.Decimal(12, 2)
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([userId])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@index([orderId])
  @@index([productId])
  @@unique([orderId, productId])
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  actorId   Int?
  actor     User?    @relation(fields: [actorId], references: [id], onDelete: SetNull)
  action    String
  meta      Json
  createdAt DateTime @default(now())

  @@index([actorId])
}
